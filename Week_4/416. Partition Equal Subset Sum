from collections import defaultdict
class Solution:
    def canPartition(self, nums: List[int]) -> bool:
        S = sum(nums)
        target = S//2
        if S%2:
            return False
        
        # problem boils down to finding a set of integers with sum == half_sum
        dp = [False] * (target+1) # answers is sum possible
        dp[0] = True
        for num in nums: 
            for i in range(target,num-1,-1):
                dp[i] = dp[i] or dp[i-num]
        return dp[target]    
        
            
        
        
        
            
            